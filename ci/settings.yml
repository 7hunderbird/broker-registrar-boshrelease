---
meta:
  name:    broker-registrar
  target:  ohio-cf
  url:     https://ci2.starkandwayne.com

  test-errand: ~

  initial_version: 3.3.0

  git:
    email:  ((git-commit-email))
    name:   ((git-commit-name))

  bosh:
    # target:   ((bosh-lite-environment))
    # cacert:   ((bosh-lite-ca-cert))
    # username: ((bosh-lite-client))
    # password: ((bosh-lite-client-secret))
    # Currently CI is running just to cut updated compiled releases
    cf:
      deployment_name: ((bosh-lite-cf-deployment-name))
      api_url:         ((bosh-lite-cf-api-url))
      admin_username:  ((bosh-lite-cf-admin-username))
      admin_password:  ((bosh-lite-cf-admin-password))
      system_domain:   ((bosh-lite-cf-system-domain))
      servicebroker_deployment: testflight-docker-broker

  manifest:
    vars: (( concat
      "\ncf-api-url=" meta.bosh.cf.api_url
      "\ncf-admin-username=" meta.bosh.cf.admin_username
      "\ncf-admin-password=" meta.bosh.cf.admin_password
      "\ncf-skip-ssl-validation=true"
      "\nservicebroker-deployment=" meta.bosh.cf.servicebroker_deployment ))

  aws:
    bucket:      (( grab meta.pipeline ))
    region_name: us-east-1
    access_key:  ((aws-access-key))
    secret_key:  ((aws-secret-key))

  github:
    owner:  cloudfoundry-community
    repo:   (( grab meta.pipeline ))
    branch: master
    private_key:  ((github-private-key))
    access_token: ((github-access-token))

  slack:
    webhook:       ((slack-webhook))
    username:      ((slack-username))
    icon:          ((slack-icon-url))
    channel:       (( concat meta.name "-boshrelease" ))
    blob_success:  '(( concat ": New version of  was detected, and updated in master. <" meta.url "/teams//pipelines/| Cut a new release?>" ))'
    blob_failure:  '(( concat ": :airplane_arriving: <" meta.url "/teams//pipelines//jobs//builds/| Failed to update the blob for >" ))'
