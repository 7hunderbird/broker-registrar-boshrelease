#!/bin/bash

set -eu

CF_API_URL='<%= p("cf.api_url") %>'
CF_ADMIN_USERNAME='<%= p("cf.username") %>'
CF_ADMIN_PASSWORD='<%= p("cf.password") %>'
CF_SKIP_SSL_VALIDATION='<%= p("cf.skip_ssl_validation") %>'

<%
  broker = link("servicebroker")
  external_host = broker.p("external_host", "#{broker.instances.first.address}:#{broker.p("port")}")
  protocol      = broker.p("protocol", broker.p("ssl_enabled", false) ? "https" : "http")
  external_url  = "#{protocol}://#{external_host}"
-%>
BROKER_NAME='<%= broker.p("name") %>'
BROKER_URL='<%= external_url %>'
BROKER_USERNAME='<%= broker.p("username") %>'
BROKER_PASSWORD='<%= broker.p("password") %>'

function updateServiceBroker() {
  echo "Service broker '${BROKER_NAME}' already exists - updating broker"
  cf update-service-broker ${BROKER_NAME} ${BROKER_USERNAME} ${BROKER_PASSWORD} ${BROKER_URL}
}

function createServiceBroker() {
  echo "Service broker '${BROKER_NAME}' does not exist - creating broker"
  cf create-service-broker ${BROKER_NAME} ${BROKER_USERNAME} ${BROKER_PASSWORD} ${BROKER_URL}
}

export PATH=/var/vcap/packages/cf-cli/bin

echo "CF_API_URL=${CF_API_URL}"
echo "CF_SKIP_SSL_VALIDATION=${CF_SKIP_SSL_VALIDATION}"
echo "CF_ADMIN_USERNAME=${CF_ADMIN_USERNAME}"
echo "BROKER_NAME=${BROKER_NAME}"
echo "BROKER_URL=${BROKER_URL}"
echo "BROKER_USERNAME=${BROKER_USERNAME}"

if [[ ${CF_SKIP_SSL_VALIDATION} == "true" ]]; then
  cf api ${CF_API_URL} --skip-ssl-validation
else
  cf api ${CF_API_URL}
fi

cf auth \
  ${CF_ADMIN_USERNAME} \
  ${CF_ADMIN_PASSWORD}

# Create broker or update if exists
createServiceBroker || updateServiceBroker

# broker.p("services") is a JSON array from servicebroker link
<% broker.p("services").each do |service| -%>
cf enable-service-access <%= service[:name] %>
<% end -%>
